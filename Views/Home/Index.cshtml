<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Карта с маркерами</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }

        #map {
            height: 500px;
            width: 100%;
            margin-bottom: 10px;
        }

        .controls {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
        }

        input, button {
            padding: 8px;
            font-size: 16px;
        }
    </style>
</head>
<body>
    <h2>Интерактивная карта</h2>

    <!-- Форма для ввода метки -->
    <div class="controls">
        <input type="text" id="markerName" placeholder="Название метки">
        <input type="text" id="markerDescription" placeholder="Описание">
        <button onclick="enableMarkerAdding()">Добавить метку</button>
    </div>

    <!-- Карта -->
    <div id="map"></div>

    <script>
        // Инициализация карты
        const map = L.map('map').setView([55.751244, 37.618423], 5); // Москва
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap'
        }).addTo(map);

        let addingMarker = false; // Флаг, включающий режим добавления метки

        // Функция загрузки меток из БД
        async function loadMarkers() {
            const response = await fetch('/api/markers');
            const markers = await response.json();
            markers.forEach(marker => {
                let leafletMarker = L.marker([marker.latitude, marker.longitude])
                    .addTo(map)
                    .bindPopup(`
                                <b>${marker.name}</b><br>${marker.description}<br>
                                <button onclick="deleteMarker(${marker.id}, this)">Удалить</button>
                            `);
                leafletMarker._id = marker.id; // Сохраняем ID маркера в объекте для последующего удаления
            });
        }

        loadMarkers(); // Загрузка сохранённых меток при загрузке страницы

        // Включить режим добавления метки
        function enableMarkerAdding() {
            addingMarker = true;
            alert("Кликните на карту, чтобы добавить метку.");
        }

        // Обработчик клика по карте для добавления новой метки
        map.on('click', async function (e) {
            if (!addingMarker) return;

            const name = document.getElementById("markerName").value.trim();
            const description = document.getElementById("markerDescription").value.trim();

            if (!name) {
                alert("Введите название метки!");
                return;
            }

            const newMarker = {
                name: name,
                description: description,
                latitude: e.latlng.lat,
                longitude: e.latlng.lng
            };

            // Отправка метки на сервер
            const response = await fetch('/api/markers', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(newMarker)
            });

            if (response.ok) {
                let savedMarker = await response.json();
                let leafletMarker = L.marker([savedMarker.latitude, savedMarker.longitude])
                    .addTo(map)
                    .bindPopup(`
                                <b>${savedMarker.name}</b><br>${savedMarker.description}<br>
                                <button onclick="deleteMarker(${savedMarker.id}, this)">Удалить</button>
                            `);
                leafletMarker._id = savedMarker.id; // Сохраняем ID маркера для удаления
                alert("Метка успешно добавлена!");
            } else {
                alert("Ошибка при добавлении метки! Попробуйте снова.");
            }

            addingMarker = false; // Отключаем режим добавления
        });

        // Функция удаления маркера
        async function deleteMarker(markerId, button) {
            const response = await fetch(`/api/markers/${markerId}`, {
                method: 'DELETE'
            });

            if (response.ok) {
                // Удаление маркера с карты
                const marker = button.closest('div.leaflet-popup-content');
                if (marker) {
                    const leafletMarker = marker._leafletMarker;
                    if (leafletMarker) {
                        map.removeLayer(leafletMarker);
                    }
                }
                alert("Метка успешно удалена!");
            } else {
                alert("Ошибка при удалении метки!");
            }
        }
    </script>
</body>
</html>
